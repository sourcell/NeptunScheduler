// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeptunScheduler.Data;

namespace NeptunScheduler.API.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    partial class ScheduleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("NeptunScheduler.API.Models.BusyTimeBlock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndMinute")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartMinute")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BusyTimeBlocks");
                });

            modelBuilder.Entity("NeptunScheduler.API.Models.Course", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableSlots")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanCollide")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndMinute")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Fix")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ignored")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NeptunId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartMinute")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("NeptunScheduler.API.Models.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("NeptunScheduler.API.Models.Course", b =>
                {
                    b.HasOne("NeptunScheduler.API.Models.Subject", "Subject")
                        .WithMany("Courses")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("NeptunScheduler.API.Models.Subject", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
